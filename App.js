import { useState } from "react"; // 引入 React 的 useState Hook，用來管理狀態
import "../src/style.css"; // 引入外部的 CSS 檔案，用來美化頁面

// 定義 Tab 資料
const tabData = [
  {
    question: "個人簡介與動機",
    answer:
      "我叫廖柏睿，今年從台中教育大學畢業，主修為社會科學，對於資訊產業產生興趣的起始點來自於社會科學的選修課，是一堂名為GIS與地理資訊系統的課程，對於社會科學而言，地理學也是社會科學的核心之一，課程內容的核心是運用電腦幫史地學者製作歷史的地理疊圖，這種客製化的目的性地圖可以使我們更能分辨出從古至今所探索的目標變化，能更分析出更多的學術議題與歷史發現。除此之外，我也很喜歡使用google map去探索周圍的一切，再加上我的科系帶有田野調查的屬性，因此很常走訪台中、彰化，甚至是其他縣市，在探索歷史建築與遺跡的過程中，在休憩時間也能迅速幫我找到美食餐廳或是補給站，讓我不禁讚嘆這些工具的便利與厲害之處。因為上述種種原因讓我對資訊科技產生了很濃厚的興趣，心想在這資訊科技愈加發達的時代，讓我也嘗試自學去嘗試做出自己的作品，在這過程中讓我想把這項技能成為投身職場的利器之一。",
  },
  {
    question: "曾經做過哪些軟體工程技術相關的學習？若有作品請分享給我們。",
    answer:
      "我有做過一個簡易的po文章留言功能的網站，類似medium，前端頁面主要使用React的semantic-ui元件去構成按鈕，用Node.js去撰寫後端邏輯去與Firebase作資料邏輯的交換與儲存，使用Firebase作為資料庫去儲存文章、使用者的帳戶密碼、留言、按讚、收藏的文章，使用algolia作為文章搜尋引擎，並且為了使維護方便，再加上以前有參考李根逸老師的youtube所教授的C語言，有data type的概念，所以接觸了TypeScript，並用TypeScript改寫了JS。並且這份自我介紹的製作，我也當成了一次練習作品的機會，這次則是嘗試學習，並增加一點CSS的動畫技術，使這份自我介紹不單單只是一份「紙本」。",
  },
  {
    question: "如果參與這個訓練，會怎麼安排學習時間？",
    answer:
      "課堂上的教學我會視自身吸收狀況去動態調整，至少每天在課堂上的內容複習上投入5小時以上，並設下短期目標與長期目標去使學習狀況維持正軌，如果有幸能加入WeHelp的培訓，除了原本的JavaScript能力之外，也希望能提升後端工程的能力（如撰寫測試、CICD、Docker等DevOps等領域的技能），希望自己是成為全端（側重後端）的軟體工程師，剩下的時間我會固定安排資料結構、演算法的學習與複習，除了應對未來的Leetcode白板題面試之外，資料結構與演算法的知識的考點無非是希望面試者具備除了寫「會動」的程式碼之外，也要能在這基礎上撰寫時間複雜度更低、效能好、好維護的程式碼品質，資結能力是軟體的基本功，與實作開發能力也是同等重要的觀念。剩下的時間則是讓自己的英語能力得到提升，我會以雅思為挑戰基礎去讓自身的英語表達、寫作能力都得到提升，後端程式語言有Python、C++、Java、C#、JavaScript(Node.js環境)、Golang…等數不勝數，但軟體行業的共同語言是英語，因此不管是面試或是文件撰寫，我也希望英語能力能幫我在之後的職場表現上無往不利。",
  },
  {
    question: "軟體技術日新月異，如何確定選擇投入的領域是正確有回報的？",
    answer:
      "如今的時代，電腦能夠幫我們處理很多繁瑣的事情，能是產業行銷、商品瀏覽與購物、物流寄送和純粹的軟體服務等…，各行各業都需要軟體的存在，去拓展商業市場與簡化商業流程，除此之外，政府機關也能藉由電腦的處理去提升各個部門的行政效率，從比爾蓋茲推行個人化電腦，一直到Google、Meta、Amazon等的強大軟體服務改變了人們的生活，這也是未來不可逆的工業革命，隨著數位化的普及，每個人都可以創造出產值，也能在開源軟體上去回饋造福社會。",
  },
  {
    question: "請描述一件產生明顯負面情緒的經歷，如何處理該情緒？",
    answer:
      "除了學習電腦科學與鍛鍊業界實作能力之外，我平常的興趣愛好是重訓鍛鍊，在一開始的時候，新手的肌肉成長速度很快，但到了中期我發現我的肌肉成長與訓練重量以肉眼可見的停滯了，這段時間持續了快半年，這讓我感到情緒很負面，認為自己付出了很多努力，但還是沒辦法突破自己，但某一天看了幾個健身教練的youtube跟有在健身的同學討論，才知道其實自身對於重訓的基礎動作與知識較為不足，尤其對於運動生理學一概不知，才不知道其中的肌肉生長原理，盲目的去維持平常的運動習慣。平常有時候遇到停滯不前的時刻都會讓我很焦慮，但這時候應該停下來，去審視自己是否有哪裡做錯了，去調整，不停的重新學習、加固基礎知識，才是一個健康的學習心態。",
  },
  {
    question: "關於這份申請網頁，分享一個開發時的技術心得。",
    answer:
      "一開始我什麼都不懂的時候，在做一些作品時，總是會去參考別人的程式碼，甚至內容較簡單純粹，幾乎就是相同的程式碼去處理這樣的邏輯，但其實我發現，就算是一樣的程式碼，不同的版本或是寫法就會造成很多蝴蝶效應，Debug不完。舉例來說，在我把一個網站從 JavaScript 重構成 TypeScript 時，我以為只要將檔案副檔名改成 .ts 就可以了。結果，當我遇到使用 React 來處理 UI 組件的時候，我發現 React 需要使用 .tsx 副檔名，因為它結合了 JSX 語法，這是 TypeScript 和 JavaScript 混合的語法。而且，轉換的過程中，我也開始真正理解同步和異步的概念，這對使用者的體驗和頁面的響應速度有著直接影響，還有從firebase取資料到後端處理後至前端渲染時的過程，在換成TypeScript的時候，在處理用戶各種資料的data type都會是一個不小的功夫。並且也在作品初步完成後，都會進行重構，看看是否能將重複的邏輯整合成一個一體多用，去精簡程式碼，例如自我介紹的按鈕，一開始初步都是分列七個按鈕，最後改成用map()來達到一體多用，都是從製作side project去發掘的。",
  },
  {
    question: "如何看待自身工作和整個社會群體的連結關係？",
    answer:
      "如今的時代，電腦能夠幫我們處理很多繁瑣的事情，能是產業行銷、商品瀏覽與購物、物流寄送和純粹的軟體服務等…，各行各業都需要軟體的存在，去拓展商業市場與簡化商業流程，除此之外，政府機關也能藉由電腦的處理去提升各個部門的行政效率，從比爾蓋茲推行個人化電腦，一直到Google、Meta、Amazon等的強大軟體服務改變了人們的生活，這也是未來不可逆的工業革命，隨著數位化的普及，每個人都可以創造出產值，也能在開源軟體上去回饋造福社會。",
  },
  {
    question: "其他想要對我們說的事情？",
    answer:
      "假如有幸申請上WeHelp，我希望能盡可能的吸收課堂上的知識，去結合自己的興趣和專業領域，並希望自己能夠在職場與人際互動中，無論是自我表現或是人際合作，能持續向他人學習、交流及提供自己所長。相信在WeHelp的輔導下，能夠快速成長並突破自己的框架，達到理想的職涯目標。",
  },
];

export default function App() {
  const [activeTabIndex, setActiveTabIndex] = useState(null);
  const [isModalOpen, setIsModalOpen] = useState(false);

  const handleTabClick = (index) => {
    setActiveTabIndex(index);
    setIsModalOpen(true);
  };

  const closeModal = () => {
    setIsModalOpen(false);
  };

  return (
    <div>
      <header>
        <div>
          <h1>廖柏睿 の WeHelp Bootcamp application</h1>
          <p>
            B.AS.,S, Social Sciences, National Taichung University of Education
            2020 - 2024.
          </p>
        </div>
      </header>

      <div id="tabs">
        <menu>
          {tabData.map((tab, index) => (
            <button key={index} onClick={() => handleTabClick(index)}>
              {tab.question}
            </button>
          ))}
        </menu>
      </div>

      <div className={`modal ${isModalOpen ? "show" : ""}`}>
        <div className="modal-content">
          <span className="close" onClick={closeModal}>
            &times;
          </span>
          <h2>{tabData[activeTabIndex]?.question}</h2>
          <p>{tabData[activeTabIndex]?.answer}</p>
        </div>
      </div>
    </div>
  );
}
